require('dotenv').config();
const { ethers, JsonRpcProvider } = require('ethers');

// Import the ABI of Receipt contract
const ShopcekReceiptABI = require('../ABI/ShopcekReceipt.abi.json');

// Load environment variables
const privateKey = process.env.WALLETKEY;
const contractAddress = process.env.RECEIPTCONTRACT;
const rpcURL = "https://opbnb-testnet-rpc.bnbchain.org/";
// const rpcURL = "http://localhost:8545";

// Initialize the provider and wallet
const provider = new JsonRpcProvider(rpcURL);
const wallet = new ethers.Wallet(privateKey, provider);

// Initialize the contract instance
const contract = new ethers.Contract(contractAddress, ShopcekReceiptABI, wallet);

// Example receipt data to be used in the transaction
// This data can be generated by the data from the e-commerce platform / database for each order
const receiptData = {
    orderId: "123456789",
    orderDate: "2023-05-21",
    transactionDetail: {
      subtotalAmount: 1100,
      totalAmount: 1300,
      currency: "USD",
      transactionHash: "0xabc123",
      paymentMethod: "CRYPTO",
      shippingCost: 200
    },
    itemsPurchased: [
      {
        itemId: "item001",
        name: "Laptop",
        category: "Electronics",
        quantity: 1,
        pricePerUnit: 1000,
        totalPrice: 1000
      },
      {
        itemId: "item002",
        name: "Mouse",
        category: "Accessories",
        quantity: 1,
        pricePerUnit: 100,
        totalPrice: 100
      }
    ],
    additionalInformation: {
      discountApplied: 10,
      promoCodeUsed: "SUMMER2023",
      loyaltyPointsEarned: 5,
      specialNotes: "Handle with care"
    },
    shopcekDomainNFT: "shopcek.example",
    signature: "0xsignature123"
  };

// Define the recipient address
const recipientAddress = '0x70997970C51812dc3A010C7d01b50e0d17dc79C8';

// Function to call the safeMint function
const safeMint = async () => {
    try {
      const tx = await contract.safeMint(recipientAddress, receiptData);
      console.log('Transaction sent:', tx.hash);
  
      // Wait for the transaction to be mined
      const receipt = await tx.wait();
      console.log('Transaction mined:', receipt);
    } catch (error) {
      console.error('Transaction failed:', error);
    }
  };

// Call the safeMint function
safeMint();